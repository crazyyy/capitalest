{"version":3,"sources":["respond.js"],"names":["window","matchMedia","doc","undefined","bool","docElem","documentElement","refNode","firstElementChild","firstChild","fakeBody","createElement","div","id","style","cssText","background","appendChild","q","innerHTML","insertBefore","offsetWidth","removeChild","matches","media","document","win","callMedia","applyMedia","respond","update","mediaQueriesSupported","lastCall","resizeDefer","eminpx","mediastyles","rules","appendedEls","parsedSheets","resizeThrottle","head","getElementsByTagName","base","links","requestQueue","ripCSS","sheet","href","isCSS","sheets","sl","length","i","rel","toLowerCase","styleSheet","rawCssText","translate","test","replace","RegExp","$1","split","location","host","push","makeRequests","thisRequest","shift","ajax","styles","setTimeout","j","fullq","thisq","eachq","eql","qs","match","ql","substring","lastIndexOf","repUrls","css","useMedia","$2","hasquery","indexOf","minw","parseFloat","maxw","getEmValue","ret","body","fakeUsed","fromResize","name","docElemProp","currWidth","compatMode","styleBlocks","lastLink","now","Date","getTime","clearTimeout","thisstyle","min","max","minnull","maxnull","em","parentNode","ss","join","type","nextSibling","createTextNode","url","callback","req","xmlHttp","open","onreadystatechange","readyState","status","responseText","send","xmlhttpmethod","XMLHttpRequest","e","ActiveXObject","addEventListener","attachEvent","this"],"mappings":"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","file":"respond.js","sourcesContent":["/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\r\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\r\nwindow.matchMedia = window.matchMedia || (function(doc, undefined){\r\n\r\n  var bool,\r\n      docElem  = doc.documentElement,\r\n      refNode  = docElem.firstElementChild || docElem.firstChild,\r\n      // fakeBody required for <FF4 when executed in <head>\r\n      fakeBody = doc.createElement('body'),\r\n      div      = doc.createElement('div');\r\n\r\n  div.id = 'mq-test-1';\r\n  div.style.cssText = \"position:absolute;top:-100em\";\r\n  fakeBody.style.background = \"none\";\r\n  fakeBody.appendChild(div);\r\n\r\n  return function(q){\r\n\r\n    div.innerHTML = '&shy;<style media=\"'+q+'\"> #mq-test-1 { width: 42px; }</style>';\r\n\r\n    docElem.insertBefore(fakeBody, refNode);\r\n    bool = div.offsetWidth == 42;\r\n    docElem.removeChild(fakeBody);\r\n\r\n    return { matches: bool, media: q };\r\n  };\r\n\r\n})(document);\r\n\r\n\r\n\r\n\r\n/*! Respond.js v1.1.0: min/max-width media query polyfill. (c) Scott Jehl. MIT/GPLv2 Lic. j.mp/respondjs  */\r\n(function( win ){\r\n  //exposed namespace\r\n  win.respond    = {};\r\n\r\n  //define update even in native-mq-supporting browsers, to avoid errors\r\n  respond.update  = function(){};\r\n\r\n  //expose media query support flag for external use\r\n  respond.mediaQueriesSupported  = win.matchMedia && win.matchMedia( \"only all\" ).matches;\r\n\r\n  //if media queries are supported, exit here\r\n  if( respond.mediaQueriesSupported ){ return; }\r\n\r\n  //define vars\r\n  var doc       = win.document,\r\n    docElem     = doc.documentElement,\r\n    mediastyles    = [],\r\n    rules      = [],\r\n    appendedEls   = [],\r\n    parsedSheets   = {},\r\n    resizeThrottle  = 30,\r\n    head       = doc.getElementsByTagName( \"head\" )[0] || docElem,\r\n    base      = doc.getElementsByTagName( \"base\" )[0],\r\n    links      = head.getElementsByTagName( \"link\" ),\r\n    requestQueue  = [],\r\n\r\n    //loop stylesheets, send text content to translate\r\n    ripCSS      = function(){\r\n      var sheets   = links,\r\n        sl     = sheets.length,\r\n        i    = 0,\r\n        //vars for loop:\r\n        sheet, href, media, isCSS;\r\n\r\n      for( ; i < sl; i++ ){\r\n        sheet  = sheets[ i ],\r\n        href  = sheet.href,\r\n        media  = sheet.media,\r\n        isCSS  = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\r\n\r\n        //only links plz and prevent re-parsing\r\n        if( !!href && isCSS && !parsedSheets[ href ] ){\r\n          // selectivizr exposes css through the rawCssText expando\r\n          if (sheet.styleSheet && sheet.styleSheet.rawCssText) {\r\n            translate( sheet.styleSheet.rawCssText, href, media );\r\n            parsedSheets[ href ] = true;\r\n          } else {\r\n            if( (!/^([a-zA-Z:]*\\/\\/)/.test( href ) && !base)\r\n              || href.replace( RegExp.$1, \"\" ).split( \"/\" )[0] === win.location.host ){\r\n              requestQueue.push( {\r\n                href: href,\r\n                media: media\r\n              } );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      makeRequests();\r\n    },\r\n\r\n    //recurse through request queue, get css text\r\n    makeRequests  = function(){\r\n      if( requestQueue.length ){\r\n        var thisRequest = requestQueue.shift();\r\n\r\n        ajax( thisRequest.href, function( styles ){\r\n          translate( styles, thisRequest.href, thisRequest.media );\r\n          parsedSheets[ thisRequest.href ] = true;\r\n\r\n          // by wrapping recursive function call in setTimeout\r\n          // we prevent \"Stack overflow\" error in IE7\r\n          setTimeout(function(){ makeRequests(); },0);\r\n        } );\r\n      }\r\n    },\r\n\r\n    //find media blocks in css text, convert to style blocks\r\n    translate      = function( styles, href, media ){\r\n      var qs      = styles.match(  /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi ),\r\n        ql      = qs && qs.length || 0,\r\n        //try to get CSS path\r\n        href    = href.substring( 0, href.lastIndexOf( \"/\" )),\r\n        repUrls    = function( css ){\r\n          return css.replace( /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g, \"$1\" + href + \"$2$3\" );\r\n        },\r\n        useMedia  = !ql && media,\r\n        //vars used in loop\r\n        i      = 0,\r\n        j, fullq, thisq, eachq, eql;\r\n\r\n      //if path exists, tack on trailing slash\r\n      if( href.length ){ href += \"/\"; }\r\n\r\n      //if no internal queries exist, but media attr does, use that\r\n      //note: this currently lacks support for situations where a media attr is specified on a link AND\r\n        //its associated stylesheet has internal CSS media queries.\r\n        //In those cases, the media attribute will currently be ignored.\r\n      if( useMedia ){\r\n        ql = 1;\r\n      }\r\n\r\n\r\n      for( ; i < ql; i++ ){\r\n        j  = 0;\r\n\r\n        //media attr\r\n        if( useMedia ){\r\n          fullq = media;\r\n          rules.push( repUrls( styles ) );\r\n        }\r\n        //parse for styles\r\n        else{\r\n          fullq  = qs[ i ].match( /@media *([^\\{]+)\\{([\\S\\s]+?)$/ ) && RegExp.$1;\r\n          rules.push( RegExp.$2 && repUrls( RegExp.$2 ) );\r\n        }\r\n\r\n        eachq  = fullq.split( \",\" );\r\n        eql    = eachq.length;\r\n\r\n        for( ; j < eql; j++ ){\r\n          thisq  = eachq[ j ];\r\n          mediastyles.push( {\r\n            media  : thisq.split( \"(\" )[ 0 ].match( /(only\\s+)?([a-zA-Z]+)\\s?/ ) && RegExp.$2 || \"all\",\r\n            rules  : rules.length - 1,\r\n            hasquery: thisq.indexOf(\"(\") > -1,\r\n            minw  : thisq.match( /\\(min\\-width:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/ ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" ),\r\n            maxw  : thisq.match( /\\(max\\-width:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/ ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" )\r\n          } );\r\n        }\r\n      }\r\n\r\n      applyMedia();\r\n    },\r\n\r\n    lastCall,\r\n\r\n    resizeDefer,\r\n\r\n    // returns the value of 1em in pixels\r\n    getEmValue    = function() {\r\n      var ret,\r\n        div = doc.createElement('div'),\r\n        body = doc.body,\r\n        fakeUsed = false;\r\n\r\n      div.style.cssText = \"position:absolute;font-size:1em;width:1em\";\r\n\r\n      if( !body ){\r\n        body = fakeUsed = doc.createElement( \"body\" );\r\n        body.style.background = \"none\";\r\n      }\r\n\r\n      body.appendChild( div );\r\n\r\n      docElem.insertBefore( body, docElem.firstChild );\r\n\r\n      ret = div.offsetWidth;\r\n\r\n      if( fakeUsed ){\r\n        docElem.removeChild( body );\r\n      }\r\n      else {\r\n        body.removeChild( div );\r\n      }\r\n\r\n      //also update eminpx before returning\r\n      ret = eminpx = parseFloat(ret);\r\n\r\n      return ret;\r\n    },\r\n\r\n    //cached container for 1em value, populated the first time it's needed\r\n    eminpx,\r\n\r\n    //enable/disable styles\r\n    applyMedia      = function( fromResize ){\r\n      var name    = \"clientWidth\",\r\n        docElemProp  = docElem[ name ],\r\n        currWidth   = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[ name ] || docElemProp,\r\n        styleBlocks  = {},\r\n        lastLink  = links[ links.length-1 ],\r\n        now     = (new Date()).getTime();\r\n\r\n      //throttle resize calls\r\n      if( fromResize && lastCall && now - lastCall < resizeThrottle ){\r\n        clearTimeout( resizeDefer );\r\n        resizeDefer = setTimeout( applyMedia, resizeThrottle );\r\n        return;\r\n      }\r\n      else {\r\n        lastCall  = now;\r\n      }\r\n\r\n      for( var i in mediastyles ){\r\n        var thisstyle = mediastyles[ i ],\r\n          min = thisstyle.minw,\r\n          max = thisstyle.maxw,\r\n          minnull = min === null,\r\n          maxnull = max === null,\r\n          em = \"em\";\r\n\r\n        if( !!min ){\r\n          min = parseFloat( min ) * ( min.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\r\n        }\r\n        if( !!max ){\r\n          max = parseFloat( max ) * ( max.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\r\n        }\r\n\r\n        // if there's no media query at all (the () part), or min or max is not null, and if either is present, they're true\r\n        if( !thisstyle.hasquery || ( !minnull || !maxnull ) && ( minnull || currWidth >= min ) && ( maxnull || currWidth <= max ) ){\r\n            if( !styleBlocks[ thisstyle.media ] ){\r\n              styleBlocks[ thisstyle.media ] = [];\r\n            }\r\n            styleBlocks[ thisstyle.media ].push( rules[ thisstyle.rules ] );\r\n        }\r\n      }\r\n\r\n      //remove any existing respond style element(s)\r\n      for( var i in appendedEls ){\r\n        if( appendedEls[ i ] && appendedEls[ i ].parentNode === head ){\r\n          head.removeChild( appendedEls[ i ] );\r\n        }\r\n      }\r\n\r\n      //inject active styles, grouped by media type\r\n      for( var i in styleBlocks ){\r\n        var ss    = doc.createElement( \"style\" ),\r\n          css    = styleBlocks[ i ].join( \"\\n\" );\r\n\r\n        ss.type = \"text/css\";\r\n        ss.media  = i;\r\n\r\n        //originally, ss was appended to a documentFragment and sheets were appended in bulk.\r\n        //this caused crashes in IE in a number of circumstances, such as when the HTML element had a bg image set, so appending beforehand seems best. Thanks to @dvelyk for the initial research on this one!\r\n        head.insertBefore( ss, lastLink.nextSibling );\r\n\r\n        if ( ss.styleSheet ){\r\n              ss.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n          ss.appendChild( doc.createTextNode( css ) );\r\n            }\r\n\r\n        //push to appendedEls to track for later removal\r\n        appendedEls.push( ss );\r\n      }\r\n    },\r\n    //tweaked Ajax functions from Quirksmode\r\n    ajax = function( url, callback ) {\r\n      var req = xmlHttp();\r\n      if (!req){\r\n        return;\r\n      }\r\n      req.open( \"GET\", url, true );\r\n      req.onreadystatechange = function () {\r\n        if ( req.readyState != 4 || req.status != 200 && req.status != 304 ){\r\n          return;\r\n        }\r\n        callback( req.responseText );\r\n      }\r\n      if ( req.readyState == 4 ){\r\n        return;\r\n      }\r\n      req.send( null );\r\n    },\r\n    //define ajax obj\r\n    xmlHttp = (function() {\r\n      var xmlhttpmethod = false;\r\n      try {\r\n        xmlhttpmethod = new XMLHttpRequest();\r\n      }\r\n      catch( e ){\r\n        xmlhttpmethod = new ActiveXObject( \"Microsoft.XMLHTTP\" );\r\n      }\r\n      return function(){\r\n        return xmlhttpmethod;\r\n      };\r\n    })();\r\n\r\n  //translate CSS\r\n  ripCSS();\r\n\r\n  //expose update for re-running respond later on\r\n  respond.update = ripCSS;\r\n\r\n  //adjust on resize\r\n  function callMedia(){\r\n    applyMedia( true );\r\n  }\r\n  if( win.addEventListener ){\r\n    win.addEventListener( \"resize\", callMedia, false );\r\n  }\r\n  else if( win.attachEvent ){\r\n    win.attachEvent( \"onresize\", callMedia );\r\n  }\r\n})(this);\r\n"],"sourceRoot":"/source/"}